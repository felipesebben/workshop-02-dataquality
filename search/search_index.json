{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Workshop 02 - Data Quality em Projetos de Dados","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do Workshop 02, focado na implementa\u00e7\u00e3o de data quality em projetos de dados. </p>"},{"location":"#objetivo","title":"Objetivo","text":"<p>Desenvolver uma ETL com testes de qualidade de dados. Visa-se impedir que erros subam para as etapas finais do pipeline (o famoso \"gold\" no padr\u00e3o medalh\u00e3o).</p>"},{"location":"#fluxo-do-projeto","title":"Fluxo do projeto","text":"<p>Abaixo, segue o fluxo de trabalho que iremos implementar.</p> <pre><code>graph TD;\n    A[Configura Vari\u00e1veis] --&gt; B[Ler o Banco SQL];\n    B --&gt; V[Valida\u00e7\u00e3o do Schema de Entrada];\n    V --&gt;|Falha| X[Alerta de Erro];\n    V --&gt;|Sucesso| C[Transformar os KPIs];\n    C --&gt; Y[Valida\u00e7\u00e3o do Schema de Sa\u00edda];\n    Y --&gt;|Falha| Z[Alerta de Erro];\n    Y --&gt;|Sucesso| D[Salvar no DuckDB];\n</code></pre>"},{"location":"#contrato-de-dados","title":"Contrato de dados","text":"<p>             Bases: <code>SchemaModel</code></p> <p>Define o esquema para a valida\u00e7\u00e3o de dados de produtos utilizando o Pandera.</p> <p>Este esquema inclui campos b\u00e1sicos para produtos.</p> <p>Attributes:</p> Name Type Description <code>id_produto</code> <code>Series[int]</code> <p>Identificador do produto.</p> <code>nome</code> <code>Series[str]</code> <p>Nome do produto.</p> <code>quantidade</code> <code>Series[int]</code> <p>Quantidade dispon\u00edvel do produto, deve estar entre 10 e 800.</p> <code>preco</code> <code>Series[float]</code> <p>Pre\u00e7o do produto, deve estar entre 1.0 e 310.0.</p> <code>categoria</code> <code>Series[str]</code> <p>Categoria do produto.</p> <code>email</code> <code>Series[str]</code> <p>E-mail associado ao produto, deve seguir o formato padr\u00e3o de e-mails.</p> Source code in <code>app\\schema.py</code> <pre><code>class ProdutoSchema(pa.SchemaModel):\n    \"\"\"\n    Define o esquema para a valida\u00e7\u00e3o de dados de produtos utilizando o Pandera.\n\n    Este esquema inclui campos b\u00e1sicos para produtos.\n\n    Attributes:\n        id_produto (Series[int]): Identificador do produto.\n        nome (Series[str]): Nome do produto.\n        quantidade (Series[int]): Quantidade dispon\u00edvel do produto, deve estar entre 10 e 800.\n        preco (Series[float]): Pre\u00e7o do produto, deve estar entre 1.0 e 310.0.\n        categoria (Series[str]): Categoria do produto.\n        email (Series[str]): E-mail associado ao produto, deve seguir o formato padr\u00e3o de e-mails.\n\n    \"\"\"\n    id_produto: Series[int]\n    nome: Series[str]\n    quantidade: Series[int] = pa.Field(\n        ge=10,  # greater_than_or_equal_to min_value=10.0\n        le=800,  # less_than_or_equal_to max_value=800.0\n        nullable=False,\n    )\n    preco: Series[float] = pa.Field(\n        ge=10.0,  # greater_than_or_equal_to min_value=10.0\n        le=310.0,  # less_than_or_equal_to max_value=310.0\n        nullable=False,\n    )\n    categoria: Series[str]\n    email: Series[str] = pa.Field(\n        regex=email_regex\n    )\n\n    class Config:\n        coerce=True\n        strict=True  # if you want to ensure no extra columns are present\n</code></pre>"}]}